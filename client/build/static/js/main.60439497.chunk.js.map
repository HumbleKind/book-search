{"version":3,"sources":["components/Header/index.js","components/Jumbotron/index.js","components/Book/index.js","utils/API.js","pages/Search.js","pages/Saved.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","Navbar","bg","expand","Brand","href","target","Toggle","aria-controls","Collapse","id","Nav","className","Link","Banner","Jumbotron","style","textAlign","Book","props","Card","Body","InputGroup","display","Title","title","Button","variant","type","marginLeft","onClick","window","open","previewLink","Text","authors","Row","Col","sm","Img","src","thumbnail","description","search","axios","get","params","q","Search","useState","books","setBooks","setSearch","Prepend","Form","Control","placeholder","onChange","event","value","Append","preventDefault","API","then","res","console","log","data","catch","err","length","map","book","key","volumeInfo","infoLink","imageLinks","Saved","App","Container","exact","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.60439497.chunk.js","sourcesContent":["import React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\n\nfunction Header() {\n  return (\n\t\t<Navbar bg=\"light\" expand=\"lg\">\n\t\t\t<Navbar.Brand href=\"https://books.google.com/\" target=\"blank\">Google Books</Navbar.Brand>\n\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t<Nav.Link href=\"/\">Search</Nav.Link>\n\t\t\t\t\t<Nav.Link href=\"/saved\">Saved</Nav.Link>\n\t\t\t\t</Nav>\n\t\t\t</Navbar.Collapse>\n\t\t</Navbar>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nfunction Banner() {\n  return (\n      <Jumbotron style={{ textAlign: \"center\" }}>\n        <h1>Google Books : Search</h1>\n        <p>\n          Find and Save Books of Interest\n        </p>\n      </Jumbotron>\n  );\n};\n\nexport default Banner;\n","import React, { Link } from 'react';\nimport { Card, Button, InputGroup, Row, Col } from 'react-bootstrap';\n\nfunction Book(props) {\n  return (\n\t\t<Card>\n\t\t\t<Card.Body>\n\t\t\t\t<InputGroup style={{ display: 'flex' }}>\n\t\t\t\t\t<Card.Title>{ props.title }</Card.Title>\n\t\t\t\t\t<Button \n\t\t\t\t\t\tvariant='success' \n\t\t\t\t\t\ttype='button' \n\t\t\t\t\t\tstyle={{ marginLeft: 'auto' }} \n\t\t\t\t\t\tonClick={() => (window.open(props.previewLink, '_blank'))}>\n\t\t\t\t\t\t\tView\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button \n\t\t\t\t\t\tvariant='warning' \n\t\t\t\t\t\ttype='button' \n\t\t\t\t\t\tstyle={{ marginLeft: '10px' }}>\n\t\t\t\t\t\t\tSave\n\t\t\t\t\t</Button>\n\t\t\t\t</InputGroup>\n\t\t\t\t<Card.Text>By: { props.authors }</Card.Text>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col sm={2}>\n\t\t\t\t\t\t<Card.Img src={ props.thumbnail } />\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t{ props.description }\n\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Card.Body>\n\t\t</Card>\n  );\n};\n\nexport default Book;\n","import axios from 'axios';\n\nexport default {\n  getGoogle: function(search) {\n    return axios.get('/api/google/', { params: { q: 'title' + search } });\n  },\n  // Gets all books\n  getBooks: function() {\n    return axios.get('/api/books');\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get('/api/books/' + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete('/api/books/' + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post('/api/books', bookData);\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Card, Form, InputGroup, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport Book from '../components/Book/';\nimport API from '../utils/API';\n\nfunction Search() {\n\n\tconst [books, setBooks] = useState([]);\n\tconst [search, setSearch] = useState();\n\n\tfunction handleInputChange(event) {\n\t\t// console.log(event.target.value);\n\t\tsetSearch(event.target.value);\n\t};\n\t\n\tfunction handleFormSubmit(event) {\n\t\tevent.preventDefault();\n\t\tAPI.getGoogle(search)\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(search);\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tsetBooks(res.data)})\n\t\t\t.catch(err => console.log(err));\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Card>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Card.Title>Enter Search Terms</Card.Title>\n\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t\t\t<InputGroup.Text>Book:</InputGroup.Text>\n\t\t\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t\t\t<Form.Control type='text' placeholder='title' onChange={handleInputChange} />\n\t\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t\t<Button variant='primary' type='submit' onClick={handleFormSubmit}>\n\t\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t\t<br />\n\t\t\t{books.length ? (\n\t\t\t\tbooks.map(book => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Book\n\t\t\t\t\t\t\tkey={book.id}\n\t\t\t\t\t\t\ttitle={book.volumeInfo.title}\n\t\t\t\t\t\t\tpreviewLink={book.volumeInfo.infoLink}\n\t\t\t\t\t\t\tauthors={book.volumeInfo.authors}\n\t\t\t\t\t\t\tdescription={book.volumeInfo.description}\n\t\t\t\t\t\t\tthumbnail={book.volumeInfo.imageLinks.thumbnail}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</div>\n\t\t\t\t))\n\t\t\t) : (\n        <h5 style={{ textAlign: \"center\" }}>No Results to Display</h5>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Search;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Form, InputGroup, Button } from 'react-bootstrap';\n\nimport API from '../utils/API';\n\nfunction Saved() {\n\treturn (\n\t\t<>\n\t\t\tSaved Books\n\t\t</>\n\t);\n};\n\nexport default Saved;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Banner from './components/Jumbotron';\nimport Search from './pages/Search';\nimport Saved from './pages/Saved';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Banner />\n        <Container>\n        <Switch>\n          <Route exact path='/'>\n            <Search />\n          </Route>\n          <Route exact path='/saved'>\n            <Saved />\n          </Route>\n        </Switch>\n      </Container>\n    </Router>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}